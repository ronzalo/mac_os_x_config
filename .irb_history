l =
p           missing_uids
n
p           process_option(options, :missing_rows, options[:missing_rows] || :sync, missing_uids, @synced_objects).length 
p ((rows_by_uid.keys - new_uids).select {|key| rows_by_uid[key].size > 1 }).class
p ((rows_by_uid.keys - new_uids).select {|key| rows_by_uid[key].size > 1 }).length
p rows_by_uid.keys
p (rows_by_uid.keys - duplicate_uids - new_uids).class
p (rows_by_uid.keys - duplicate_uids - new_uids).length
p (rows_by_uid.keys - duplicate_uids - new_uids).first.class
p (rows_by_uid.keys - duplicate_uids - new_uids)
p (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].class}
p (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].first.class}
p (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].first.keys.count}
p (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].first}
p ap  (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].first}
p ap  (rows_by_uid.keys - duplicate_uids - new_uids).map{|i| rows_by_uid[i].last}
p ap syncable_objects_by_uid.class
p ap syncable_objects_by_uid.size
p ap syncable_objects_by_uid
p ap syncable_objects_by_uid.first.class
p ap syncable_objects_by_uid.first.
p ap syncable_objects_by_uid.first
p ap rows_by_uid.class
p ap rows_by_uid.sie
p ap rows_by_uid.count
p ap rows_by_uid.first
p ap rows_by_uid
p ap rows_by_uid.keys
p ap rows_by_uid["o2r11177n"]
p ap duplicate_uids.class
p ap duplicate_uids.count
p ap new_uids
up
q
p ap syncable_objects_by_uid.count
p ap rows_by_uid.last
p ap rows_by_uid.map &:name
p ap rows_by_uid.map{|h|h["Name"]}
p ap rows_by_uid.map{|h|h.class}
p ap rows_by_uid.map{|h|h.last.class}
p ap rows_by_uid.map{|h|h.last.length}
p ap rows_by_uid.map{|h|h.last}
p row
p @field_map
p @set_synced_at
s
p field_map
p ap  field_map
p ap     field_map.first
p ap     field_map[1]
p ap     field_map.class
p ap     field_map.last
p field
p definition
set autolist
p row[definition]
p "Invalid field defined for #{self} (#{field})" unless self.respond_to?("#{field}=")
p self.to_s
p self.respond_to?("#{field}=")
p value
p ap field_map
p "get_#{field.to_s.humanize.downcase}"
p ap self.class
p ap self.to_s
p ap self.class.respond_to?(:category_column?) && self.class.category_column?(field)
self.to_s
p FixtureTemplateContent.get_category "POS"
p ap FixtureTemplateContent.get_category "POS"
p ap (FixtureTemplateContent.get_category "POS").class
p ap (FixtureTemplateContent.get_category "POS").class.find 8
p ap (FixtureTemplateContent.get_category "POS").class.find 7
p ap self.id
p ap "update the db #{self.to_s}.#{field} = #{value}"
p  self.respond_to?("#{field}=")
value
p ap value
p ap row
p self.inspect
p ap field_map.class
p ap field_map.first
p ap field_map.last
p ap  self.class.respond_to?(:category_column?) && self.class.category_column?(field)
p ap self.changed?
quit
p require 'hirb'
Hirb.enable
p Hirb.enable
Permissions.limit(5)
p Permissions.limit(5)
require 'Hirb'
p require 'Hirb'
Location.limit(3)
p Location.limit(3)
Location
p require 'hirb' 
p Location
p Location.limit(2)
p login
p password
p SITE
p VMM::Auth::Ldap.new(:username => login.to_s.downcase, :password => password, :site => SITE)
p ua = VMM::Auth::Ldap.new(:username => login.to_s.downcase, :password => password, :site => SITE)
ua.valid?
p ua.valid?
l 284
p ldap = VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password, :site => 'demo' )
ldap = VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password, :site => 'demo' )
ldap.valid?
p ldap.valid?
p ldap = VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password, :site => 'crate' )
p (VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password, :site => 'crate' )).valid?
p (VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password, :site => 'demo' )).valid?
p (VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password+"x", :site => 'demo' )).valid?
p (VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password+"", :site => 'demo' )).valid?
p (VMM::Auth::Ldap.new( :username => login.to_s.downcase, :password => password+"", :site => 'crate' )).valid?
Ldap.options
p Ldap.options
VMM::Auth::Ldap.options
p VMM::Auth::Ldap.options
p VMM::Auth::Ldap.all.count
p VMM::Auth::Ldap.all
p self.options
 l =
sym
p sym
p @@#{sym}
super
p super
u
exit
p ap all_tabs
tabs
p tabs
require 'awesome_print'
p require 'awesome_print'
Rails.class
User.find_by_login("LC Admin")
ap User.find_by_login("LC Admin")
lc = User.last
lc.has_permission?('report')
lc.has_permission?('report/')
lc.has_permission?('report/compliance_by_day_form')
Location.count
ls = Location.all.map{|l| l.parent_parent_distribution if !l.parent_parent_distribution.isBlank?};nil
ls.count
[].methods.grep /blank/
ls = Location.all.map{|l| l.parent_parent_distribution if Location.count.parent_parent_distribution.unless_blank};nil
ls = Location.all.map{|l| l.parent_parent_distribution_id if Location.count.parent_parent_distribution_id.unless_blank};nil
ls = Location.all.map{|l| l.parent_parent_distribution_id};nil
ls.length
ls.limit(7)
ls[1..7]
require 'methodfinder'
Permission.src
Permission.methods - Object.methods
Permission.validates_size_of.src
Permission.ancestors
Permission.ancestors.src
Permission
y Permission
p y Permission
ap Permission
ap Permission.coint
ap Permission.count
ap Permission.all[10..22]
ap Permission.all.map &:name
Site
SITE
Permission.find_by_name "account/help"
ap Permission.find_by_name "account/help"
p = Permission.find_by_name "account/help"
ap Rails.root
 Rails.root
RAIL
Rail
Rails
RAILS
Permission.last
Permission.last.see
hostname
expert.reverse
expert.re		
"expert".reverse
fs = %w[.gitignore Gemfile app/controllers/a_layout_placement_groups_controller.rb app/controllers/a_layouts_controller.rb app/controllers/api/v1/reference_files_controller.rb app/controllers/locations_controller.rb app/controllers/ppm_campaigns_controller.rb app/controllers/report_controller.rb app/helpers/application_helper.rb app/models/a_filter.rb app/models/a_layout.rb app/models/a_layout_group.rb app/models/a_layout_group_placement.rb app/models/a_layout_placement.rb app/models/a_layout_placement_group.rb app/models/c_placement/c_placement_check.rb app/models/content.rb app/models/location_filter.rb app/views/announcements/_form.rhtml app/views/api/v1/binary_files/_binary_file.rabl app/views/api/v1/fixtures/show.rabl app/views/api/v1/floorplans/show.rabl app/views/api/v1/reference_files/show.rabl app/views/api/v1/users/_user.rabl app/views/fixtures/_show.html.haml app/views/locations/floorplan.html.erb app/views/placement/index.haml app/views/system_notifier/site_error.rhtml config/att_site_config.yml config/routes.rb config/site config/site.rb db/data/20121030195837_add_placement_hero_perm.rb db/migrate/201007210931_add_template_location_function_columns.rb db/migrate/201007271210_add_deleted_at_to_campaign_content_group_generations_and_uploads.rb db/migrate/20111231999901_port_skuter.rb db/migrate/20120910231432_move_data_and_drop_for_content_comments_and_a_layout_comments.rb db/migrate/20121107173327_add_mobile_display_field_to_announcements.rb db/migrate/20121107195204_add_more_lux_location_attributes.rb db/migrate/20121112163308_add_lc_dr_status.rb db/schema.rb decorators/att/controllers/a_filters_controller.rb decorators/att/models/location.rb decorators/lux/controllers/a_filters_controller.rb decorators/o2/controllers/a_filters_controller.rb decorators/o2/models/c_placement/c_placement_check.rb lib/extensions.rb lib/ppm/load_alpha_lc.rb lib/ppm/ppm_support.rb lib/ppm/setup_lux.rb lib/tasks/filter_columns.rake place_ab/place_ab.rb placement/placement/skuter.rb public/javascripts/application.js public/javascripts/sku_find.js public/stylesheets/base.css sites/att/app/views/layouts/_login_footer.rhtml sites/att/config/crontab.prod.primary]
fs.length
  fs.map{|f| `"git diff master development --stat -- #{f}"`}
`pwd`
ap   fs.map{|f| `basecommand + f`}
  basecommand = "git diff master development --stat -- "
  fs.map{|f| system basecommand + f}
fs
9*6
gem install awesome_print
ile -- awesome_print
require 'rubygems'
require 'mechanize'
require 'logger'
agent = WWW::Mechanize.new { |a| a.log = Logger.new("mech.log") }
Mechanize.class
Mechanize.new { |a| a.log = Logger.new("mech.log") }
agent = Mechanize.new { |a| a.log = Logger.new("mech.log") }
agent.user_agent_alias = 'Windows Mozilla'
agent.auth('cmagid','OpenOne23')
agent.get('http://vzw.rbmfrontline.com') do |page|
puts page.title
end
x = {:name=>"foo", :age=>99} 
 x.flatten
Hash[x.flatten]
Hash[*x.flatten]
pet2
*x
(x.flatten)
*(x.flatten)
 (*(x.flatten)).class
puts *(x.flatten)
   pet1, pet2, pet3 = *["duck","dog","cat"]
*zoo = pet1, pet2, pet3
zoo
pet1
BOARD_MEMBERS = ['Jan', 'Julie', 'Archie', 'Stewick']
HISTORIANS = ['Braith', 'Dewey', 'Eduardo']
HISTORIANS = ['Braith', 'Dewey', 'Eduardo']case name
   when *BOARD_MEMBERS
    "You're on the board!  A congratulations is in order."
   when *HISTORIANS
    "You are busy chronicling every deft play." 
   when *HISTORIANS|BOARD_MEMBERS
    "We welcome you all to the First International
     Symposium of Board Members and Historians Alike."
   end
e board!  A congratulations is in order."
p `where`
p `rvm gemsets list`
p `rvm list gemsets`
pp `rvm list gemsets`
ap `rvm list gemsets`
require `awesome_print`
p Rails.root
p File.exist?(File.join(Rails.root, 'public', 'images', @site, 'logo.gif')) ? 'gif' : 'png'
p @site
@site = 'crate'
p  File.exist?(File.join(Rails.root, 'public', 'images', @site, 'logo.gif')) ? 'gif' : 'png'
p  File.exist?() ? 'gif' : 'png'
p File.join(Rails.root, 'public', 'images', @site, 'logo.gif')
p (File.methods - Object.methods).sort
File.exist?( File.join(Rails.root, 'public', 'images', @site, 'logo.gif') )
p File.exist?( File.join(Rails.root, 'public', 'images', @site, 'logo.gif') )
p File.exists?( File.join(Rails.root, 'public', 'images', @site, 'logo.gif') )
p extension = File.exist?(File.join(Rails.root, 'public', 'images', @site, 'logo.gif')) ? 'gif' : 'png'
require 'ruby_gems'
/bin/env ruby -e "print Time.now.to_i"
i = Image.find 112120
p Image
o Image.last
y Image.last
y Image.columns
p Image.columns
Image.last.size
Image.last
Image.first
p Image.first
p Image.first.size
p Image.last
Setting.count
y Setting.count
Image
Image.count
p Image.find 112120
p i = Image.find 112120
 i = Image.find 112120
 i = Image.find 112120;nil
i.class
i.url
i.file_url
i.file
y i.methods
y i.methods.sort;nil
y (i.methods.sort - Object.methods).sort
y i.name
y i.file
y i.filename
y i.name_before_type_cast
y i.name_was
y i.original
j=Image.find 112120
j=Image.find 112120;nil
j.class
j.id
y j.url
`hostname`
j.album
y j.original
Order
Order.methods.grep /trans/
Order.parent
Order.methods.grep /hei/
Order.methods.grep /hie/
Order.ancestors
Order.ancestors.inspect
`echo $TERM`
put "sss"
puts "sss"
site = "junk"
p site
release_path = "~/"
p release_path
  put "SITE = '#{site}'\n#this file not used in r13+",     "#{release_path}/config/site.rb"
p  put "SITE = '#{site}'\n#this file not used in r13+",     "#{release_path}/config/site.rb"
p content
c
help trace
tr var content
p
 netc
cttce
p messe
l
p contenpoe
ce
p  authorized?('account/help')
help
help display
p             new_uids.reject{|nuid| rejects.collect(&:downcase).include?(nuid.downcase)}
p obj
p new_uids.reject{|nuid| rejects.collect(&:downcase).include?(nuid.downcase)}
p rows_by_uid.class
p rows_by_uid.count
p rows_by_uid
p rows_by_uid[uid]
pp row
p row.class
p default_values.merge(@field_map)
pp default_values.merge(@field_map)
p ap obj.class
p constructor
p      other_hash
help set
p ap self
p     field_map
p ap      field_map
down
p @sync_scope.class
p options
b 8
b list
help break
p ap 
p self.class
self.class.respond_to?(:category_column?)
p ap self.class.respond_to?(:category_column?)
p ap self.class.category_column?(field)
p ap self.class.category_columns
p ap self.class.category_column
p ap self.class.categories
p ap @@category_columns
p @@category_columns
p self.class.respond_to?(:category_column?) && self.class.category_column?(field)
p ap @syncer.class
p ap @syncer.count
p ap @syncer.methods.grep /respon/
p ap @syncer.respond_to? :coun t
p ap @syncer.respond_to? :count
p ap @syncer.respond_to? :size
p ap @syncer.respond_to? :length
p ap (@syncer.methods - Object.methods).sort
p ap @syncer.uid_field
p obj.class
p ap row.class
p ap process_option(options, :new_rows, options[:new_rows] || :sync, new_uids, @rows).class
l 10
p       field_map
p ap        field_map
@column_mapping.blank?
p ap @column_mapping.blank?
p ap @target_class.accessible.class
p @target_class.class
p @target_class
p ap   @target_class.method(:accessible).source_location
p xyz
p Content.class
p Content
p 1
p ap  @column_mapping
pp self
p @column_mapping
p  @column_mapping['category_id']
p row[xyz]
p ap @column_mapping
p ap Content
     Content.get_content_category(row[xyz]).try(:id) 
p     Content.get_content_category(row[xyz]).try(:id) 
p     Content.get_content_categories(row[xyz]).try(:id) 
p     Category.get_content_categories(row[xyz]).try(:id) 
p field.to_s
p field.to_s.humanize
p get_category(row[xyz])
Content.get_category 'POS'
p ap Content.get_category 'POS'
p ap self.class.send("get_#{field.to_s.humanize.downcase}", value)
p self.class.send("get_#{field.to_s.humanize.downcase}", value).id
self
p self
p  self.class.respond_to?(:category_column?) && self.class.category_column?(field)
p        self.send "#{field}"
p       self.send("#{field}=", value)
self.class.category_column?(field)
p self.class.category_column?(field)
p self.class.send("get_#{field.to_s.humanize.downcase}", 'POS').id
p Content.get_category("category")
p Content.get_category("category").id
self.class.send("get_#{field.to_s.humanize.downcase}", value)
p self.class.send("get_#{field.to_s.humanize.downcase}", value)
p file_path
p ap Spreadsheet.open(file_path).worksheet(0).first.to_a.compact
p    @header
p ap p 8
p ap @campaign
p ap params
p ap params[:floorplan_id]
@location.floorplan
p ap params[:floorplan_id] 
p ap @location.floorplan
p ap (self.methods - Object.methods).sort
p params[:floorplan_id]
p @location.floorplan.class
p ap @location.floorplan.class
p params[:message]
`clear`
list
p allowed_permission_strings.find {|perm| task[0,perm.size + 1] == perm + '/' }
p task
p  allowed_permission_strings.find {|perm| task[0,perm.size + 1] == perm + '/' }
irb
app/views/fixtures/_show.html.haml
app/views/system_notifier/site_error.rhtml
lib/extensions.rb
app/controllers/ppm_campaigns_controller.rb
config/site.rb
db/migrate/20121107195204_add_more_lux_location_attributes.rb
db/migrate/20121112163308_add_lc_dr_status.rb
decorators/lux/controllers/a_filters_controller.rb
lib/ppm/load_alpha_lc.rb
lib/ppm/ppm_support.rb
lib/ppm/setup_lux.rb }
revertGOList = ["app/views/locations/_switch_campaign.html.erb", "placement/placement/skuter.rb", "public/stylesheets/base.css", "public/stylesheets/snippets/device_accessory_skuables/index.css", "sites/att/app/views/layouts/_login_footer.rhtml", "db/migrate/201007210931_add_template_location_function_columns.rb", "db/migrate/201007271210_add_deleted_at_to_campaign_content_group_generations_and_uploads.rb", "public/javascripts/application.js", "app/controllers/ppm/campaigns_controller.rb", "config/routes.rb", "app/mailers/plain_notifier.rb", "app/mailers/plain_notifier.rb", "app/mailers/plain_notifier.rb", "app/assets/stylesheets/client/lux/ppm.scss", "app/views/ppm/campaigns/_page_actions.rhtml", "db/migrate/20120823141605_create_a_layout_heroes.rb", ".gitignore", "db/schema.rb", "db/migrate/20120910231432_move_data_and_drop_for_content_comments_and_a_layout_comments.rb", "public/stylesheets/snippets/ppm_campaigns/index.css", "public/stylesheets/snippets/placement/edit_accessory_skuable_category.css", "public/stylesheets/snippets/placement/edit_skuable_group.css", "lib/tasks/sites/att/reports.rake", "app/controllers/locations_controller.rb", "public/javascripts/sku_find.js", "app/views/locations/floorplan.html.erb", "public/stylesheets/unused code.css"] 
diffnamestatuslist & revertGOList
intersect = diffnamestatuslist & revertGOList
intersect.length
revertGOList - diffnamestatuslist
pp revertGOList - diffnamestatuslist
diffnamestatuslist.uniq.length
pp diffnamestatuslist 
pp diffnamestatuslist.sort
pp revertGOList.sort
pp revertGOList.uniq.sort
pp revertGOList.uniq.sort.length
p revertGOList.uniq
revertGOList.length
newRevertGoList = %w{.gitignore
app/assets/stylesheets/client/lux/ppm.scss
app/controllers/locations_controller.rb
app/controllers/ppm/campaigns_controller.rb
app/mailers/plain_notifier.rb
app/views/locations/_switch_campaign.html.erb
app/views/locations/floorplan.html.erb
app/views/ppm/campaigns/_page_actions.rhtml
app/views/ppm/campaigns/_select_campaign.html.erb
config/routes.rb
db/migrate/201007210931_add_template_location_function_columns.rb
db/migrate/201007271210_add_deleted_at_to_campaign_content_group_generations_and_uploads.rb
db/migrate/20120823141605_create_a_layout_heroes.rb
db/migrate/20120910231432_move_data_and_drop_for_content_comments_and_a_layout_comments.rb
db/schema.rb
lib/tasks/sites/att/reports.rake
placement/placement/skuter.rb
public/javascripts/application.js
public/javascripts/sku_find.js
public/stylesheets/base.css
public/stylesheets/snippets/device_accessory_skuables/index.css
public/stylesheets/snippets/placement/edit_accessory_skuable_category.css
public/stylesheets/snippets/placement/edit_skuable_group.css
public/stylesheets/snippets/ppm_campaigns/index.css
sites/att/app/views/layouts/_login_footer.rhtml}
newRevertGoList.uniq.length
pp newRevertGoList.sort.uniq
diffnamestatuslist.length
newRevertGoList.length
diffnamestatuslist
p = Proc.new { |name| "Hello #{name}" }
l = lambda { |name| "Hello #{name}" }
p.call
l.call
l.call 'me'
l.class
l.length
l2 = l.split(\n)
l2.length
l2.first
l2.first.split("staff ")
l2.first.split("staff")
l2.first.split("staff").split()
l2.first.split("staff").class
l2.first.split("staff").map &:split
l3 = l2.first.split("staff").map &:split
l3.last
l3.last.first
[l3.last.first l3.last.last]
[l3.last.first, l3.last.last]
l  = `/Users/cmagid/Documents/contents.sh`
l2 = l.split("\n")
l3 = l2.map &:split("staff")
l2
l3 = l2.map{|e| e.split("staff") }
l3.map &:last
l4 = l3.map &:last
l5 = l4.split
l5 = l4.map &:split
l5
l6 = l5.map{|a| [a.first, a.last]}
x = "at line /Users/cmagid/projects/newppm/app/helpers/application_helper.rb:403"
x.split
x = "/Users/cmagid/projects/local-data/bin/emacs_ruby_helper.rb:6:in" 
x
x.split :
x.split ":"
x.split( ":") == 3
x.split( ":") 
x.split( ":").length == 3 
x.split( ":").second
x.split( ":").last
x.split( ":")
x.split( ":")[1]
task  = "report/compliance_by_day_form"
p authorized?('account/help')
p authorized?('account')
p authorized?('account/chma')
p user
p options.is_a?(Hash) && options[:controller] && options[:action]
p options.is_a?(String) && !((options[0,1] == '/') || (options[0,4] == 'http'))
p user.has_permission?(options)
options
p $skip_authorization_check
p Permission.global_permissions.include?(task)
p Permission.global_permissions
p ap Permission.global_permissions
- account/help
potn
pnn nng 
disp content

p @log
