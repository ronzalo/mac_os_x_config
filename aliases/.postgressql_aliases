The follow long section between 77*s is the outptut from the latest install on my macbook


Note I setup pg to start automatically.   but if it doesn't try

Or start manually with:
    pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

And stop with:
    pg_ctl -D /usr/local/var/postgres stop -s -m fast



*****************************************************************************
  ruby-1.9.3-p125@refinery $ brew rm postgresql --force
  Uninstalling postgresql...

  ruby-1.9.3-p125@refinery $ brew update
  Already up-to-date.
  ruby-1.9.3-p125@refinery $ brew install postgresql
  ==> Downloading http://ftp.postgresql.org/pub/source/v9.1.3/postgresql-9.1.3.tar.bz2
  ######################################################################## 100.0%
  ==> ./configure --disable-debug --prefix=/usr/local/Cellar/postgresql/9.1.3 --datadir=/usr/local/Cellar/postgresql/9.1.3/
  ==> make install-world
  ==> Caveats
  # Build Notes

  If builds of PostgreSQL 9 are failing and you have version 8.x installed,
  you may need to remove the previous version first. See:
    https://github.com/mxcl/homebrew/issues/issue/2510

  To build plpython against a specific Python, set PYTHON prior to brewing:
    PYTHON=/usr/local/bin/python  brew install postgresql
  See:
    http://www.postgresql.org/docs/9.1/static/install-procedure.html

  # Create/Upgrade a Database

  If this is your first install, create a database with:
    initdb /usr/local/var/postgres

  To migrate existing data from a previous major version (pre-9.1) of PostgreSQL, see:
    http://www.postgresql.org/docs/9.1/static/upgrading.html

  # Start/Stop PostgreSQL

  If this is your first install, automatically load on login with:
    mkdir -p ~/Library/LaunchAgents
    cp /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

  If this is an upgrade and you already have the homebrew.mxcl.postgresql.plist loaded:
    launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
    cp /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
    launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist

  Or start manually with:
    pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

  And stop with:
    pg_ctl -D /usr/local/var/postgres stop -s -m fast

  # Loading Extensions

  By default, Homebrew builds all available Contrib extensions.  To see a list of all
  available extensions, from the psql command line, run:
    SELECT * FROM pg_available_extensions;

  To load any of the extension names, navigate to the desired database and run:
    CREATE EXTENSION [extension name];

  For instance, to load the tablefunc extension in the current database, run:
    CREATE EXTENSION tablefunc;

  For more information on the CREATE EXTENSION command, see:
    http://www.postgresql.org/docs/9.1/static/sql-createextension.html
  For more information on extensions, see:
    http://www.postgresql.org/docs/9.1/static/contrib.html

  # Other

  Some machines may require provisioning of shared memory:
    http://www.postgresql.org/docs/current/static/kernel-resources.html#SYSVIPC

  To install postgresql (and ossp-uuid) in 32-bit mode:
     brew install postgresql --32-bit

  If you want to install the postgres gem, including ARCHFLAGS is recommended:
      env ARCHFLAGS="-arch x86_64" gem install pg

  To install gems without sudo, see the Homebrew wiki.
  ==> Summary
  /usr/local/Cellar/postgresql/9.1.3: 2746 files, 36M, built in 15.2 minutes
  ruby-1.9.3-p125@refinery $
*****************************************************************************

I may have done this out of order.  iow I already did the following and repeated it below

ruby-1.9.3-p125 $ initdb /usr/local/var/postgres
The files belonging to this database system will be owned by user "cmmagid".
This user must also own the server process.

The database cluster will be initialized with locales
  COLLATE:  C
  CTYPE:    en_US.UTF-8
  MESSAGES: C
  MONETARY: C
  NUMERIC:  C
  TIME:     C
The default database encoding has accordingly been set to UTF8.
The default text search configuration will be set to "english".

initdb: directory "/usr/local/var/postgres" exists but is not empty
If you want to create a new database system, either remove or empty
the directory "/usr/local/var/postgres" or run initdb
with an argument other than "/usr/local/var/postgres".


locate log file
/usr/local/var/postgres/server.log


================ Mon Feb 25 09:04:59 2013 ================
