Content.count
q
quite
exit
p ap Location.attribute_categories
exit
q
quit
help
gem-list
help
exit
cd Categories
cd Category
self
last
Pry.config.pager = false
Pry.config.editor = proc { |file, line| "emacsclient #{file} +#{line}" }
l
ls
c
p Pry.config
Pry.config.pager
cd ..
ls
q
quit
Category.count
p Pry.config.pager = false
Category.count
cd Category
self
Pry.config.pager = false
count
help
count
methods
edit before_remove_const
count;42
self.count
Pry.config.pager = false
p Pry.config.pager = false
self.count
.pwd
exit
quit
ls
cd Categories
cd Category
ls
Category.last
Hirb::View.toggle_pager
Category.last
all.map{|c| ["name = #{name} value = #{value}"]}
all.map{|c| ["name = #{c.name} value = #{c.value}"]}
all.map{|c| ["name = #{c.name} | value = #{c.value}"]}
find_by_name 'English'
all.map{|c| ["id = #{id} | name = #{c.name} | value = #{c.value}"]}
all.map{|c| ["id = #{object_id} | name = #{c.name} | value = #{c.value}"]}
all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort{id <=> id}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort id
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort_by_id
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort{|a,b| a<=>b}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort{|a,b| puts "#{a.class} #{b.class}"}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).each{|a,b| puts "#{a.class} #{b.class}"}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort{|a,b| a.to_i <=> b.to_i}
(all.map{|c| ["id = #{c.id} | name = #{c.name} | value = #{c.value}"]}).sort{|a,b| a.first.to_i <=> b.first.to_i}
(all.map{|c| ["id = ", c.id, "name = ", c.name,  "value = ", c.value]})
(all.map{|c| ["id = ", c.id, "name = ", c.name,  "value = ", c.value]}).sort{|a,b| a[1] <=> b[1]}
quit
cd Category
count
Pry.config.pager = false
count
self
y Category.all
cd ..
Category.find_by_parent_id 8
c = Category.find_by_parent_id 8
Category
Category.find_by_parent_id "8"
Category.last.attributes
.pwd
Pry.config.pager = false
Category.all
Hirb.dissable
Hirb.disable
exit
Category.count
p Pry.config.pager = false
Category.count
Pry.config.pager
Pry.config.pager = true
Category.count
Pry.config.pager = nil
Category.count
Pry.config.pager = false
Category.count
Hirb.enable :pager=>false
Category.count
quit
Hirb.disable
Hirb.enable :pager=>false
Category.count
Pry.config.pager
Pry.config.editor
exit
cd Content
count
Pry.config.pager = false
ls
cd ..
cd Content
count
Pry.config.pager = false
Pry.config.editor = proc { |file, line| "emacsclient #{file} +#{line}" }
Hirb.disable
count
set autolist
Hirb.enable :pager=>false
p ap Content
[1,1,2,3,4,4,5].uniq
[1,1,2,3,4,4,5].length
[1,1,2,3,4,4,5].uniq.length
Content.last.container_type_id
Container.find 1695
ContainerType.find 1695
ContainerType.count
(ContainerType.all.map &:name).uniq
["\" x 141.05 \"",
  "\" x 141.15 \"",
  "\" x 25.38 \"",
  "\" x 48 \"",
  "\" x 48.33 \"",
  "\" x 5.905 \"",
  "\" x 51.33 \"",
  "\" x 6.015 \"",
  "\" x 6.17125 \"",
  "\" x 7.54 \"",
  "\" x 7.76068965517241 \"",
  "\" x 8.14 \"",
  "\" x 8.17689655172413 \"",
  "\" x 8.17689655172414 \"",
  "\" x 8.34 \"",
  "\" x 8.34931034482759 \"",
  "\" x 8.52172413793103 \"",
  "\" x 9.14 \"",
  "\" x 90.94 \"",
  "\" x 98.42 \"",
  "11.84 \" x 10.0 \"",
  "12x30",
  "130.0 \" x 60.0 \"",
  "21.5 \" x 10.59 \"",
  "4.13 \" x 7.56517241379311 \"",
  "48.0 \" x 48.0 \"",
  "5.67862068965517 \" x 8.96758620689655 \"",
  "5.67862068965517 \" x 9.14 \"",
  "5.67862068965517 \" x 9.31241379310345 \"",
  "5.72 \" x 4.14 \"",
  "6.19586206896552 \" x 7.58827586206896 \"",
  "6.32 \" x 8.14 \"",
  "6.32 \" x 8.34 \"",
  "6.36827586206897 \" x 9.14 \"",
  "6.54068965517241 \" x 8.96758620689655 \"",
  "6.54068965517241 \" x 9.14 \"",
  "6.54068965517242 \" x 8.96758620689655 \"",
  "6.72 \" x 8.34 \"",
  "6.88551724137931 \" x 7.93310344827586 \"",
  "6.92 \" x 8.14 \"",
  "60.0 \" x 60.0 \"",
  "7.05793103448276 \" x 8.62275862068966 \"",
  "7.05793103448276 \" x 8.96758620689655 \"",
  "7.05793103448276 \" x 9.14 \"",
  "7.05793103448276 \" x 9.31241379310345 \"",
  "7.12 \" x 8.34 \"",
  "7.12 \" x 8.94 \"",
  "7.12 \" x 9.14 \"",
  "7.23034482758621 \" x 7.07103448275862 \"",
  "7.23034482758621 \" x 7.58827586206896 \"",
  "7.32 \" x 8.94 \"",
  "7.32000000000001 \" x 7.94 \"",
  "7.40275862068965 \" x 8.96758620689655 \"",
  "7.52 \" x 8.14 \"",
  "7.52 \" x 8.34 \"",
  "7.72 \" x 7.94 \"",
  "7.72 \" x 8.54 \"",
  "7.74758620689655 \" x 6.89862068965517 \"",
  "7.74758620689655 \" x 7.24344827586207 \"",
  "7.74758620689655 \" x 8.96758620689655 \"",
  "7.92 \" x 8.62275862068966 \"",
  "72.0 \" x 72.0 \"",
  "8.09241379310345 \" x 7.93310344827586 \"",
  "8.12 \" x 8.74 \"",
  "8.32000000000001 \" x 7.94 \"",
  "9.13 \" x 8.00448275862069 \"",
  "A1 Tactical window poster (594x841)",
  "Apple care Dummy box",
  "Iphone POS holder 650",
  "Iphone Pos holder 1200",
  "Joggler display",
  "Phone Bay sims double (210x148)",
  "WL00 - One Size Price ticket",
  "WL01-A1 Windows and Instore Posters",
  "WL02-A0 Window Posters",
  "WL03-Relay Half banners (Impulse unit banner)",
  "WL04-Relay Full Banner",
  "WL05-Slyvia A3 Backoffice poster",
  "WL06-NSD 09 Tariff pos VM block",
  "WL07- A5 Portrait",
  "WL078 HERO LARGE POSTER 841 X 1150MM",
  "WL079 HERO SMAL "WL079 HERO SMAL "WWL08-A6 Leaflet ",
  "WL09-NSD A7 Ticket ",
  "WL10-A6 Price Ticket",
  "WL11-Applecare Price Ticket",
  "WL12-A4 Strut Boards",
  "WL13-A4 Portrait",
  "WL14-A6 Landscape",
  "WL15-Takeaway Cards A6",
  "WL16-Takeaway Cards A7",
  "WL17-A4 Landscape",
  "WL18-Aliminium Phone Post 100mm",
  "WL19-Aliminium Phone Post 160mm",
  "WL20-Bay Wedge Landscape relay (1110x300)",
  "WL21-Carrier Bags",
  "WL22-DL LEAFLET",
  "WL23-Relay phone device",
  "WL24-NSD Showcase units(541x300)",
  "WL25-Connected World New BB/Laptop Bay Poster",
  "WL26-Connected World New Podium Large",
  "WL27-Connected World New Podium Small",
  "WL28-Phone Backing Plate (22cmx23cm)",
  "WL29-Phone Backing Plate Subtemplate (22cmx23cm)",
  "WL30-NSD VM Panel Acc",
  "WL31-Bromley Tarriff Wall",
  "WL32-Matrix wall",
  "WL33-Oscar Plus Sign Up Circular Desk POS",
  "WL34-International Wall Bay Header - BAFTA",
  "WL35 - Magazine Stand - Poster",
  "WL36-Accessory bay 600",
  "WL37-Accessory Message 600 bay",
  "WL38-Accessory Fin",
  "WL39- Cube accessory bay header",
  "WL40-Bay Header",
  "WL41-Satellite product headers",
  "WL42-matrix wall large holder",
  "WL43-Matrix wall Plasma Screen",
  "WL44-Matrix Wall Medium Holder",
  "WL45-Mat "WL45-Mat "WL45-Mat "WL4"WL46- Accessory Cube Be Till",
  "WL47-Accessory unit Services",
  "WL48-Commercial Matrix Wall",
  "WL49-NSD Window Fixture back of TV Poster",
  "WL50-Gaming TV Back poster",
  "WL51-NSD large sign up desk graphic "WL51-NSD large sign up d Data Protection Graphic",
  "WL53-NSD 2008 Half Accessory container",
  "WL54-NSD 2008 small Accessory wall fixture",
  "WL55-NSD VM wall Panel tariff menu",
  "WL56-Hero Bay Showcase",
  "WL57- Impulse Accessory Unit",
  "WL58-Impulse Poster",
  "WL59-NSD10 SAT Data Prote "WL59-NSD10 SAT Data Pruter Display",
  "WL61-Gaming Devices",
  "WL62-Gaming FSDU Wedge",
  "WL63-Gaming Lounge Vinyl Lettering",
  "WL64-International Header Oscar and Oscar plus",
  "WL65-International Wall Bay Poster",
  "WL66-Slough Showcase 1",
  "WL67-Slough Showcase 2",
  "WL68-Satellite Wall Showcase",
  "WL69-Oscar,OP and Bafta CW headers",
  "WL70-NSD Satellite Large Accessory Message",
  "WL71-NSD Satellite Small Accessory Message",
  "WL72-NSD VM Poster Panel",
  "WL73-Table top magazine Holder",
  "WL74-Relay Accessory Backing board",
  "WL75-Behind till accessory template",
  "WL76- Accessory Bay 1200 back Message",
  "WL77-NSD 09 Window fixture showcase",
  "WLB01 Commerical Message",
  U / 600 NON LLU",
  "WLBB03 BB unit Header Pos MB 400 ",
  "WLBB04 BB unit Header Pos HBB 600 LLU / 600 NON LLU",
  "WLBB05 BB unit  MB A5 LAND / HBB A5 LAND",
  "WLBB06 Broadband House Display",
  "WLBB07 Side Graphics - portrait format",
  "WLBB08\tCentre of Frame -L/scape format LLU and Non LLU",
  "WLBB09\tFSDU BB unit 400 Magnetic (STRAIGHT CUT)",
  "WLi01 - iPhone wall bay poster",
  "WLi02 - iPhone Table - middle poster",
  "WLi02 IPHONE 650 TICKET",
  "WLi03-i-phone table ticket",
  "WLi04-i-phone table tick pos - NSD 1200 table",
  "WLi05-NEW 4G iphone price ticket",
  "WLi06-Apple care Insurance Dispenser",
  "WLs01-Fixture part container",
  "brian",
  "dongle tariff card 172x28mm",
  "freestanding units (all stores)",
  "iwatt1",
nil].length
q
p 1
exit
(ContainerType.all.map &:name).uniq.length
(ContainerType.all.map &:name).uniq
ContainerType.find_by_name  "WLB03 Tariff wall section "
ct = ContainerType.find_by_name  "WLB03 Tariff wall section "
ContainerType.find_by_name  "WLB03 Tariff wall section"
ContainerType.find_by_name  "WLB03 Tariff wall section "
exit
Container.last
ContainerType.last
Pry.config.pager = false
ContainerType.last
Hirb.disable
ContainerType.last
exit
Content.category
p ap Content.category
p ap Content.category_id
p ap Content.last.category
Pry.config.pager = false
Hirb.disable
Pry.config.editor = proc { |file, line| "emacsclient #{file} +#{line}" }
Content.count
Content.all[9]
Content.all[9].get_category
Content.all[9].get_category, "POS"
)
q
1
7*7
q
quite
quit
Pry.config.pager = false; Hirb.disable
Content.get_category "POS"
(Content.get_category "POS").id
exit
Region
Pry.config.pager = false
cd Region
ls
exit
q
quit
Region.all.count
Pry.config.pager = false
Hirb.disable
Region
p ap Region
quit
Location.all.map &:type_id
Categories.find 96
p Categories.find 96
p Category.find 96
p Category.find 90
Location.all.map &:type_id
p ap (Location.all.map &:type_id).uniq.sort
p (Location.all.map &:type_id)
p (Location.all.map &:type_id).class
p (Location.all.map &:type_id).uniq
p (Location.all.map &:type_id).uniq.count
q
quit
a = {
  "category_id" => "Category:",
  "ungroupable" => "Ungroupable:",
  "type" => "Type",
  "requires_approval" => "Requires Approval:",
  "order_max" => "Order Max:",
  "orderable_at" => "Orderable at:",
  "holding_warehouse" => "Holding Warehouse:",
  "container_type_id" => "Container type:",
  "name" => "Name:",
  "item_number" => "Item Number:",
  "order_count_group" => "Order Content Group:",
  "owner" => "Owner:"
}
exit
a
8
nil.flip
{:a => 1}.flip
{}.flip
exit
Pry.config.pager = false
Hirb.disable
Pry.config.editor = proc { |file, line| "emacsclient #{file} +#{line}" }
exit
cd FixtureTemplateContent
p
p self
cd ..
pwd
ap FixtureTemplateContent
ap FixtureTemplateContent.find_by_item_number "O2R11355N"
FixtureTypeContent
ap FixtureTypeContent.find_by_item_number "O2R11355N"
ap FixtureTemplateContent.find_by_item_number "O2R11355N"
temp =  FixtureTemplateContent.find_by_item_number "O2R11355N"
temp.container_type_id
ContainerType
p ap ContainerType.find 604
temp =  FixtureTemplateContent.find_by_item_number "O2R11355N"
temp.category
temp
temp.grep /lang/
temp =  FixtureTemplateContent.find_by_item_number "O2R11356N"
temp.name
temp.container_type
temp.category
temp.categoryname
temp.category.name
temp.language
temp.language.name
temp.
temp
p temp
p tempquantity
p temp.quantity
c = FixtureTemplateContent.find_by_item_number "O2R11448N"
c.item_number
c.name
c.container_type.name
c.category.name
c.language
c.language.name
c.get_language.name
c.language.name
c.quantity
(%w{O2R11355N O2R11356N O2R11448N O2R11645N O2R11177N}.map{|i| FixtureTemplateContent.find_by_item_number i}).map{|c| [["Item Number", "Name", "Container Type", "Category", "Language", "Quantity On Hand"],[c.item_number,c.name,c.container_type.name,c.category.name,c.language.name,c.quantity]]}
exit
cd ActiveRecord::Migration
model = Kernel.const_get((:regions).to_s.classify)
say_with_time "Migrating #{table}"
say_with_time "Migrating #{:regions}"
exit
Location.category_column?
Location.category_column? 'category_id'
p Location.category_column? 'attr038'
Pry.config.pager = false
Hirb.disable
Pry.config.editor = proc { |file, line| "emacsclient #{file} +#{line}" }
Hirb.enable :pager=>false
set autolist
p Location.category_column? 'attr038'
p Location.category_column? 'ATTR038'
p Location.category_columns
p Location.type
p Location.responds_to? :category_column?
Location.respond_to?(:category_column?)
Location.respond_to? :category_column?
Location.count
Location.last.category_column?
Location.category_column?
Location.category_column? :attr028
Location.category_column? :ATTR028
Location.category_column? 'attr028'
exit
Location.all
exit
l = Location.find 29
p ap l
l
l.type_id
p ap l
p (Location.all.map &:type_id).uniq
l.type_id
exit
